{"name":"Create Character","type":"script","author":"4hTONVYy9gATyrV6","img":"icons/equipment/head/hat-belted-simple-brown.webp","scope":"global","command":"function formResult(input, output) {\n    return `<tr><td style='text-align:left'><b>${input}: </b></td><td>${output}</td></tr>`;\n}\n\nasync function getTableAndRoll(tableName) {\n    let thing = await game.tables.entities.find(t => t.name === tableName).roll();\n    return thing.results[0].data.text.toLowerCase();\n}\n\nasync function Create() {\n    let allroll = new Roll(\"3d6[bloodmoon]+3d6[cold]+3d6[force]\").roll();\n\n    let strresults = allroll.dice[0].results;\n    let refresults = allroll.dice[1].results;\n    let charesults = allroll.dice[2].results;\n\n    let strength = strresults[0].result + strresults[1].result + strresults[2].result;\n    let reflexes = refresults[0].result + refresults[1].result + refresults[2].result;\n    let charisma = charesults[0].result + charesults[1].result + charesults[2].result;\n\n    let hp = new Roll(\"1d6\").roll().total;\n    let dollars = new Roll(\"3d6\").roll().total;\n    let age = new Roll(\"3d10+12\").roll().total;\n    // name\n    let maleNamesTable = game.tables.entities.find(t => t.name === \"Male Names\");\n    let femaleNamesTable = game.tables.entities.find(t => t.name === \"Female Names\");\n    let genderRoll = new Roll(\"1d6\").roll().total % 2;\n    let firstName = \"\";\n    let genderTable;\n    if (genderRoll == 1) {\n        genderTable = await maleNamesTable.roll();\n    } else {\n        genderTable = await femaleNamesTable.roll();\n    }\n    firstName += genderTable.results[0].data.text;\n    const surnameTable = await game.tables.entities.find(t => t.name === \"Surnames\").roll();\n    const nicknameTable = await game.tables.entities.find(t => t.name === \"Nicknames\").roll();\n    const nickname = nicknameTable.results[0].data.text;\n    const surname = surnameTable.results[0].data.text;\n    // const characterName = firstName + \" '\" + nickname + \"' \" + surname;\n    const characterName = firstName + \" '\" + nickname + \"' \" + surname;\n    // biography\n    const formerProfession = await getTableAndRoll(\"Former Professions\");\n    let biography = `<strong>${age}</strong> years old. Previous career was as a ${formerProfession}.`;\n    let actorData = {\n        name: characterName,\n        background: formerProfession,\n        biography: biography,\n        hp: { value: hp, max: hp },\n        dollars: dollars,\n        \"abilities\": {\n            \"STR\": {\n                \"value\": strength,\n                \"max\": strength\n            },\n            \"REF\": {\n                \"value\": reflexes,\n                \"max\": reflexes\n            },\n            \"CHA\": {\n                \"value\": charisma,\n                \"max\": charisma\n            }\n        },\n    };\n\n    let items = [];\n\n    const data = duplicate(game.items.getName(\"Rations\"));\n    data.data.quantity = 2;\n    items.push(data);\n\n    const Knapsack = game.items.find(i => i.name === \"Knapsack\");\n    items.push(Knapsack.data);\n\n    async function checkAndGetItemFromSubTable(name) {\n        if (SUB_TABLE_NAMES.includes(name)) {\n            let subRoll = await game.tables.getName(name).roll();\n            let subResults = subRoll.results;\n            // console.log(\"sub: \" + subresults[0].data.text);\n            return checkAndGetItemFromSubTable(subresults[0].data.text);\n        } else {\n            return game.items.find(i => i.name === name);\n        }\n    }\n\n    const TABLE_NAMES = [\"Gear\", \"Weapons\"];\n    const SUB_TABLE_NAMES = [\"Weapons\", \"Gear\"]\n\n    let itemInsert = \"\";\n\n    TABLE_NAMES.forEach(async tableName => {\n        // console.log(\"table: \" + tableName);\n        let theRoll = await game.tables.getName(tableName).roll();\n        let results = theRoll.results;\n        // console.log(\"main: \" + results[0].data.text);\n\n        let item = undefined;\n\n        if (results.length) {\n            item = await checkAndGetItemFromSubTable(results[0].data.text);\n        }\n\n        if (item) {\n            let itemClicker = \"@Item[\" + item.data.name + \"]\";\n            itemInsert += formResult(tableName, itemClicker);\n            items.push(item.data);\n        } else {\n            itemInsert += formResult(tableName, `None`);\n        }\n    });\n\n    let actor = await Actor.create({\n        name: characterName,\n        type: \"character\",\n        img: \"icons/svg/mystery-man.svg\",\n        sort: 12000,\n        data: actorData,\n        token: {},\n        items: items,\n        flags: {}\n    });\n\n    function postCharToChat() {\n\n        let statInsert = formResult(\"Strength\", strength) +\n            formResult(\"Reflexes\", reflexes) +\n            formResult(\"Charisma\", charisma) + `</table><table style=\"width:22%\">` +\n            formResult(\"HP\", hp) +\n            formResult(\"Dollars\", dollars) + \"</table>\";\n\n        let statsMessage = `<table style=\"width:32%\">${statInsert}</table>`;\n        let gearMessage = `<table>${itemInsert}</table>`;\n        let bioMessage = biography;\n\n        let charInsert = \"@Actor[\" + characterName + \"]\";\n\n        let chatData = {\n            user: game.user._id,\n            speaker: ChatMessage.getSpeaker(),\n            content: `<h2>${charInsert}</h2>` + statsMessage + gearMessage + bioMessage\n        };\n        ChatMessage.create(chatData, {});\n    }\n\n    if (game.dice3d) {\n        game.dice3d.showForRoll(allroll).then(happened => {\n            postCharToChat();\n\n        });\n    } else {\n        postCharToChat();\n    }\n\n};\nCreate();","folder":null,"sort":0,"permission":{"default":0,"4hTONVYy9gATyrV6":3},"flags":{"core":{"sourceId":"Macro.npoIVJCQR5xxjEJS"}},"_id":"B8Dti0Ss0uTHRBrM"}
